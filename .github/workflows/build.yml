name: Build NoGramTime APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip tree
          mkdir -p $HOME/android-sdk
          cd $HOME/android-sdk
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q commandlinetools-linux-11076708_latest.zip -d cmdline-tools
          mv cmdline-tools/cmdline-tools cmdline-tools/latest
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools"

      - name: Unzip project
        run: unzip -o NoGramTime_fixed.zip -d project

      - name: Inspect ZIP content
        run: |
          echo "== TOP LEVEL =="
          ls -la
          echo "== PROJECT TREE (first 400 lines) =="
          find project -maxdepth 4 -printf '%y %p\n' | sed -n '1,400p'
          echo "== POSSIBILI FILE GRADLE =="
          find project -type f \( -iname "build.gradle*" -o -iname "settings.gradle*" -o -iname "gradlew" \) -print || true
          echo "== MANIFEST =="
          find project -type f -name "AndroidManifest.xml" -print || true

      - name: Detect Gradle project root
        id: detect
        run: |
          ROOT=$(find project -type f -name "build.gradle*" -printf '%h\n' | sort -u | head -n1)
          if [ -z "$ROOT" ]; then
            echo "❌ Nessun file build.gradle trovato."
            exit 1
          fi
          echo "root=$ROOT" >> $GITHUB_OUTPUT

      - name: Generate Gradle wrapper if missing
        run: |
          cd ${{ steps.detect.outputs.root }}
          if [ ! -f gradlew ]; then
            gradle wrapper --gradle-version 8.7
          fi
          chmod +x gradlew

      - name: Build debug APK
        run: |
          cd ${{ steps.detect.outputs.root }}
          ./gradlew assembleDebug --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: NoGramTime-APK
          path: ${{ steps.detect.outputs.root }}/app/build/outputs/apk/debug/*.apk
